Heritability estimates
Jerry Duran
2024-04-23
R Markdown


library(ggplot2)
library(reshape2)
library(RColorBrewer)
## Heritability estimate comparison
#Make data frame
#Narrow-sense only


# Load necessary libraries
library(forcats)
library(dplyr)
library(ggplot2)
library(reshape2)
library(RColorBrewer)

# Create the "df" data frame
df <- data.frame(
  Frequency = factor(c(250, 500, 1000, 2000, 3000, 4000, 6000, 8000, "Puretone Average", "High Frequency Average")),
  "Narrow sense heritability" = c(0.56, 0.46, 0.49, 0.56, 0.36, 0.34, 0.36, 0.26, 0.48, 0.35),
  "Familial SNP heritability" = c(0.31, 0.29, 0.16, 0.35, 0.28, 0.17, 0.3, 0.16, 0.25, 0.17),
  "Unrelated SNP heritability" = c(0.17, 0.15, 0.08, 0.17, 0.12, 0.12, 0.12, 0.07, 0.14, 0.1)
)

# Create the "se" data frame
se <- data.frame(
  Frequency = factor(c(250, 500, 1000, 2000, 3000, 4000, 6000, 8000, "Puretone Average", "High Frequency Average")),
  "Narrow sense SE" = c(0.05, 0.05, 0.07, 0.07, 0.06, 0.1, 0.09, 0.1, 0.11, 0.11),
  "Familial SNP SE" = c(0.06, 0.07, 0.07, 0.08, 0.07, 0.06, 0.08, 0.09, 0.11, 0.11),
  "Unrelated SNP SE" = c(0.14, 0.14, 0.12, 0.11, 0.11, 0.11, 0.13, 0.11, 0.16, 0.17)
  )

# Melt the data frames
df_melt <- melt(df, id.vars = "Frequency")
se_melt <- melt(se, id.vars = "Frequency")

# Add SE column to df_melt
df_melt$SE <- se_melt$value

# Define color palette
my_palette <- rev(brewer.pal(6, "Blues"))

# Create empty rows data frame
empty_rows <- data.frame(
  Frequency = factor(rep(c(250, 500, 1000, 2000, 3000, 4000, 6000, 8000, "Puretone Average", "High Frequency Average"), each = 3)),
  variable = rep(c("Narrow-sense heritability", "Familial SNP heritability", "Unrelated SNP heritability"), each = 10),
  value = rep(0, 30),
  SE = rep(0, 30)
)

# Bind empty rows to df_melt
df_melt2 <- rbind(df_melt, empty_rows)
df_melt2 <- df_melt2[order(df_melt2$Frequency), ]

# Specify the desired order for Frequency
breaks <- factor(c(250, 500, 1000, 2000, 3000, 4000, 6000, 8000, "Puretone Average", "High Frequency Average"), 
                 levels = c(250, 500, 1000, 2000, 3000, 4000, 6000, 8000, "Puretone Average", "High Frequency Average"))
labels = c("250", "500", "1000", "2000", "3000", "4000", "6000", "8000", "Puretone Average","High Frequency Average")

#Convert format 
df_melt2$Frequency <- factor(df_melt2$Frequency, levels = breaks, labels = labels)
wrapped_labels <- str_wrap(labels, width = 10)

#Plot 
h2_all <- ggplot(df_melt2, aes(x = Frequency, y = value, fill = variable)) +
  geom_bar(stat = "identity", position = position_dodge(width = dodge_width), width = 0.8) +
  geom_errorbar(
    aes(ymin = value - SE/2, ymax = value + SE/2),
    position = position_dodge(width = dodge_width),
    width = 0.4) +
  scale_fill_manual(values = my_palette, na.value = NA, 
                    labels = c("Narrow sense heritability", "Familial SNP heritability", "Unrelated SNP heritability"),
                    na.translate = FALSE) +  
  scale_y_continuous(limits = c(0, 1), expand = expansion(mult = c(0, 0.1)), breaks = seq(0, 1, by = 0.1)) +
  scale_x_discrete(breaks = breaks, labels = wrapped_labels) +  # Use wrapped_labels here
  labs(x = "Frequency(Hz)", y = "Heritability", fill = "", title = "Comparsion of heritability estimates") +
  theme_classic() +
  theme(plot.title = element_text(size = 22, face = "bold", hjust = 0.5, margin = margin(t = 10)),
        legend.position = "bottom",
        legend.text = element_text(size = 14),
        legend.title = element_text(size = 16, face = "bold"),
        axis.title.x = element_text(size = 18, face = "bold"),
        axis.title.y = element_text(size = 18, face ="bold", margin = margin(r = 15)),
        axis.text.y = element_text(size = 12, face = "bold", margin = margin(t = 0, r = 0, b = 0, l = 0)),
        axis.ticks.x = element_blank(),
        panel.spacing.x = unit(1, "cm"),
        panel.spacing.y = unit(1, "cm"),
        axis.text.x = element_text(size = 12, face = "bold", hjust = 1, margin = margin(t = 0, r = 0, b = 0, l = 0)))

# Print the plot
print(h2_all)


# Save the plot and print it
ggsave("Joint_estimates.png", plot = h2_all_try, width = 12, height = 8, dpi = 600)

print(h2_all_try)
